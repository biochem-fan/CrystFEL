.\"
.\" get_hkl man page
.\"
.\" Copyright © 2012-2015 Deutsches Elektronen-Synchrotron DESY,
.\"                       a research centre of the Helmholtz Association.
.\"
.\" Part of CrystFEL - crystallography with a FEL
.\"

.TH GET_HKL 1
.SH NAME
get_hkl \- manipulate reflection data
.SH SYNOPSIS
.PP
\fBget_hkl -i\fR \fIreflections.hkl\fR \fB-y\fR \fIpointgroup\fR [\fBoptions\fR] \fB...\fR \fB-o\fR \fIoutput.hkl\fR
.PP
\fBget_hkl --help\fR

.SH DESCRIPTION
get_hkl performs various manipulations on reflection lists.  Possible manipulations include: expanding to a point group of lower symmetry, 'twinning' to a point group of higher symmetry, adding noise, restricting the list to contain only reflections included in another 'template' list, and some less common miscellaneous manipulations.
.PP
The input filename should be specified with \fB-i\fR \fIfilename\fR or \fB--input=\fR\fIfilename\fR.  The output filename should be specified with \fB-o\fR \fIfilename\fR or \fB--output=\fR\fIfilename\fR.  The symmetry of the input reflection list should be specified with \fB-y\fR \fIpointgroup\fR or \fB--symmetry=\fR\fIpointgroup\fR.  Beyond these parameters, you can choose one of the manipulations described below.  The behaviour if multiple manipulations are requested is deliberately left undefined: it's much clearer to perform multiple manipulations in explicit separate steps.

.PD 0
.IP "\fB-p\fR \fIunitcell.cell\fR"
.IP "\fB-p\fR \fIunitcell.pdb\fR"
.IP \fB--pdb=\fR\fIunitcell.pdb\fR
.PD
Specify the name of the file containing unit cell information, in PDB or CrystFEL format.

.SH EXPANDING REFLECTIONS INTO A POINT GROUP OF LOWER SYMMETRY
.PD 0
.IP "\fB-e\fR \fIpointgroup\fR"
.IP \fB--expand=\fR\fIpointgroup\fR
.PD
The reflections will be expanded out, according to the symmetry of the input reflections, to fill the asymmetric unit of \fIpointgroup\fR.

.SH REDUCING REFLECTIONS INTO A POINT GROUP OF HIGHER SYMMETRY
.PD 0
.IP "\fB-w\fR \fIpointgroup\fR"
.IP \fB--twin=\fR\fIpointgroup\fR
.IP \fB--no-need-all-parts\fR
.PD
Reflections in the list which are equivalent according to \fIpointgroup\fR will have their intensities summed.  The output reflection list will contain the summed intensities in the asymmetric unit for \fIpointgroup\fR.  Reflections for which any of the 'twin mates' are missing will not be written out, unless you use \fB--no-need-all-parts\fR.

.SH ADDING NOISE
.PD 0
.IP \fB--poisson\fR
.IP \fB--noise\fR
.PD
Add either 10% flat random noise (with \fB--noise\fR) or generate Poisson noise (with \fB--poisson\fR).  If Poisson noise is to be generated, the reflection intensities will be assumed to be measured in arbitrary units, and the conversion factor to photons must be given using \fB--adu-per-photon=\fR\fIn\fR, where
\fIn\fR is the conversion factor.

.PD 0
.IP \fB--adu-per-photon=\fR\fIn\fR
.PD
See \fB--poisson\fR.

.SH REMOVING DUPLICATED REFLECTIONS
.PD 0
.IP \fB--trim-centrics\fR
.PD
Reflections which are duplicated, according to the symmetry of the input reflection list, will be removed.  This is sometimes useful when importing data from other programs.

.SH RESTRICTING REFLECTIONS ACCORDING TO A TEMPLATE
.PD 0
.IP "\fB-t\fR \fIfilename\fR"
.IP \fB--template=\fR\fIfilename\fR
.PD
Only reflections in the input list which also appear in \fIfilename\fR will be written to the output.

.SH MULTIPLICITY
.PD 0
.IP \fB--multiplicity\fR
.PD
The intensities of the reflections will be multiplied by their symmetric multiplicities according to the point group of the input list.

.SH APPLYING A RESOLUTION CUTOFF
.PD 0
.IP \fB--cutoff-angstroms=\fR\fIn\fR
.IP \fB--cutoff-angstroms=\fR\fIn1,n2,n3\fR
.PD
In the first form, reflections with d (=lamba/2*sin(theta)) < \fIn\fR will be removed.
In the second form, anisotropic truncation will be performed with separate resolution limits \fIn1\fR, \fIn2\fR and \fIn3\fR along a*, b* and c* respectively.  You must also specify \fB-p\fR or \fB--pdb\fR.

.SH REINDEXING REFLECTIONS
.PD 0
.IP \fB--reindex=\fIop\fR
.PD
Reindex the reflections according to \fIop\fR.  Example: \fB--reindex=k,h,-l\fR.

.SH AUTHOR
This page was written by Thomas White.

.SH REPORTING BUGS
Report bugs to <taw@physics.org>, or visit <http://www.desy.de/~twhite/crystfel>.

.SH COPYRIGHT AND DISCLAIMER
Copyright © 2012-2015 Deutsches Elektronen-Synchrotron DESY, a research centre of the Helmholtz Association.
.P
get_hkl, and this manual, are part of CrystFEL.
.P
CrystFEL is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
.P
CrystFEL is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
.P
You should have received a copy of the GNU General Public License along with CrystFEL.  If not, see <http://www.gnu.org/licenses/>.

.SH SEE ALSO
.BR crystfel (7),
.BR check_hkl (1),
.BR compare_hkl (1),
.BR pattern_sim (1)
